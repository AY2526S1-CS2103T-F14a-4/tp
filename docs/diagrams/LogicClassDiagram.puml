@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

package "Parser Classes" as ParserClasses{
}
Class XYZCommand
Class ConfirmableCommand
Class CommandResult
Class "{abstract}\nCommand" as Command


Class "<<interface>>\nLogic" as Logic
Class LogicManager

Class "<<interface>>\nConfirmable" as Confirmable
Class ConfirmationManager
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
Logic -right[hidden]- ConfirmationManager
LogicManager --->"1" ParserClasses
ParserClasses ..> XYZCommand : <<create>>
ParserClasses ..> ConfirmableCommand

XYZCommand -up-|> Command
XYZCommand -right[hidden]- ConfirmableCommand
ConfirmableCommand -up|> Command
ConfirmableCommand .right.|> Confirmable
LogicManager ..> Command : <<call>>

ConfirmationManager -up-> Model
LogicManager -up-> Model
LogicManager -up-> Storage
Storage -right[hidden]- Model
note bottom of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc
note bottom of ConfirmableCommand: ConfirmableCommand = DeleteCommand, etc

Logic ..> CommandResult
LogicManager ..> CommandResult
ConfirmationManager ..> CommandResult
Command .up.> CommandResult : <<create>>

ConfirmationManager ..> ConfirmableCommand : <<call>>

@enduml
